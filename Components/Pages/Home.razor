@page "/"
@using ReservasRestaurante.DTO
@using ReservasRestaurante.Services

<PageTitle>Login</PageTitle>

<EditForm Model="userSession" OnValidSubmit="Login" FormName="loginForm">
    <div class="mb-3">
        <label class="form-label">Nombre Usuario</label>
        <InputText class="form-control" @bind-Value="userSession.Username" />
    </div>

    <div class="mb-3">
        <label class="form-label">Contraseña</label>
        <InputText  class="form-control" @bind-Value="userSession.UserPassword" type="password" />
    </div>

    <button type="submit" class="btn btn-primary">Login</button>

    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger mt-3">@errorMessage</div>
    }
</EditForm>

@inject NavigationManager navigationManager
@inject AuthService authService

@code {
    private UserSession userSession = new UserSession();
    private string errorMessage;

    private bool isAuthenticated;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            isAuthenticated = await authService.IsAuthenticated();
            if (isAuthenticated)
            {
                navigationManager.NavigateTo("/counter");
            }
            else
            {
                navigationManager.NavigateTo("/");
            }
        }
    }


    private async Task Login()
    {
        try
        {
            var token = await authService.Login(userSession);

            if (string.IsNullOrEmpty(token))
            {
                errorMessage = "Credenciales incorrectas. Por favor, intente de nuevo.";
                return;
            }

            await authService.SetToken(token);
            navigationManager.NavigateTo("/reservas", true);
        }
        catch (Exception ex)
        {
            errorMessage = $"Error al iniciar sesión: {ex.Message}";
        }
    }
}